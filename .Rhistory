getwd()
# Carregando o pacote readr
library(readr)
# Carregando o dataset
carros <- read_csv("carros-usados.csv")
# Visualizando os Dados
View(carros)
#Resumo das Variáveis / Tipo
str(carros)
#Ano encontra-se como numérica, mas não irá realizar cálculo com ela. E sim, categorica, fator.
# Sumário dos Dados (variável ano) média e mediana próximas, possível que seja distribuição normal para essa variável
summary(carros$ano)
#Analisando medidas de tendência central das duas colunas
summary(carros[c('preco', 'kilometragem')])
#Preço provável que não tenha distribuição normal
# Funções --> para variável preço (numérica)
#Media e Mediana
mean(carros$preco)
median(carros$preco)
#Quartil
quantile(carros$preco)
quantile(carros$preco, probs = c(0.01, 0.99))
quantile(carros$preco, seq( from = 0, to = 1, by = 0.20))
#Diferença entre Q3 e Q1
IQR(carros$preco)
#Valor mínimo e máximo
range(carros$preco)
#Diferença ente valor mínimo e máximo
diff(range(carros$preco))
# Plot --> Representação gráfica para análise exploratória------------
# Boxplot - Mediana é a linha do meio. Observar os Valores extremos -- PREÇO
# Leitura de Baixo para Cima - Q1, Q2 (Mediana) e Q3
boxplot(carros$preco, main = "Boxplot para os Preços de Carros Usados", ylab = "Preço (R$)")
boxplot(carros$kilometragem, main = "Boxplot para a Km de Carros Usados", ylab = "Kilometragem (R$)")
#UNIVARIADA A DISTRIBUIÇÃO
# Histograma --> Distribuição das variáveis - Variável Preço/ Quilometragem
# Indicam a frequência de valores dentro de cada bin (classe de valores)
hist(carros$preco, main = "Histograma para os Preços Carros Usados", xlab = "Preço (R$)")
hist(carros$kilometragem, main = "Histograma para a Km de Carros Usados", ylab = "Kilometragem (R$)")
hist(carros$kilometragem, main = "Histograma para a Km de Carros Usados", breaks = 5, ylab = "Kilometragem (R$)")
#BIVARIADA DISTRIBUIÇÃO
# Scatterplot Preço x Km - 2 VARIÁVEIS
# Usando o preço como variável dependente (y)
plot(x = carros$kilometragem, y = carros$preco,
main = "Scatterplot - Preço x Km",
xlab = "Kilometragem",
ylab = "Preço (R$)")
#Analisando a dispersão. Conclusão da análise a medida que aumenta a quilometragem reduz o preço.
# Medidas de Dispersão
# Ao interpretar a variância, números maiores indicam que
# os dados estão espalhados mais amplamente em torno da
# média. O desvio padrão indica, em média, a quantidade
# de cada valor diferente da média.
var(carros$preco)
sd(carros$preco)
var(carros$kilometragem)
sd(carros$kilometragem)
-------------------------------------------------------------
##### Análise Exploratória de Dados Para Variáveis Categóricas #####
# Tabelas de contingência - representam uma única variável categórica
# Lista as categorias das variáveis nominais
#Quantidade (frequência) por cor/modelo a função table.
?table
str(carros)
table(carros$cor)
table(carros$modelo)
#Tipos dos dados
str(carros)
# Calculando a proporção de cada categoria
#Contigencia em um objeto
model_table <- table(carros$modelo)
prop.table(model_table)
#Arredondar
round(model_table, digits = 1)
#SE= 78 SEL=23 SES= 49 MODELO = FREQUÊNCIA
# Arrendondando os valores
model_table <- table(carros$modelo)
model_table <- prop.table(model_table) * 100
round(model_table, digits = 1)
#Em percentual
# Criando uma nova variável indicando cores conservadoras
# (que as pessoas compram com mais frequência)
head(carros)
#Vetor - cores conservadoras (pesquisa com base no problema de negócios)
carros$conserv <- carros$cor %in% c("Preto", "Cinza", "Prata", "Branco")
#Linhas iniciais do dataset
head(carros)
# Checando a variável
#Valor lógico cada variável cor se estiver dentro do vetor retorna verdaeiro, caso não, falso.
table(carros$conserv)
#51 não são conservadoras, nãoé percentual e sim numérico. 99 cores conservadoras.
# Verificando o relacionamento entre 2 variáveis categóricas
# Criando uma crosstable
# Tabelas de contingência fornecem uma maneira de exibir
# as frequências e frequências relativas de observações
#Função cross table sendo instalado pelo pacote e carregamento
install.packages("gmodels")
library(gmodels)
?CrossTable
#variável modelo e conservadora (segunda variável está em True e False)
CrossTable(x = carros$modelo, y = carros$conserv)
#Tabela cruzada/ contigência. Verificando frequencias relativas das distribuições.
#Elementos em colunas e linhas.
## Teste do Qui-quadrado
# É um teste não paramétrico, ou seja, não depende dos
# parâmetros populacionais, como média e variância.
#VARIÁVEL QUALITATIVA, COMPARAR PROPORÇÕES.
# O princípio básico deste método é comparar proporções,
CrossTable(x = carros$modelo, y = carros$conserv, chisq = TRUE)
chisq.test(x = carros$modelo, y = carros$conserv)
# Trabalhamos com 2 hipóteses:
# Hipótese nula: As frequências observadas não são diferentes das frequências esperadas.
# Não existe diferença entre as frequências (contagens) dos grupos.
# Portanto, não há associação entre os grupos
# Hipótese alternativa: As frequências observadas são diferentes das frequências esperadas,
# portanto existe diferença entre as frequências.
# Portanto, há associação entre os grupos.
# Neste caso, o valor do Chi = 0.15
# E graus de liberdade (df) = 2
# Portanto, não há associação entre os grupos
# O valor alto do p-value confirma esta conclusão (p-value = 0.9259).
# Plot --> Representação gráfica para análise exploratória------------
# Boxplot - Mediana é a linha do meio. Observar os Valores extremos -- PREÇO
# Leitura de Baixo para Cima - Q1, Q2 (Mediana) e Q3
boxplot(carros$preco, main = "Boxplot para os Preços de Carros Usados", ylab = "Preço (R$)")
boxplot(carros$kilometragem, main = "Boxplot para a Km de Carros Usados", ylab = "Kilometragem (R$)")
#BIVARIADA DISTRIBUIÇÃO
# Scatterplot Preço x Km - 2 VARIÁVEIS
# Usando o preço como variável dependente (y)
plot(x = carros$kilometragem, y = carros$preco,
main = "Scatterplot - Preço x Km",
xlab = "Kilometragem",
ylab = "Preço (R$)")
# Arrendondando os valores
model_table <- table(carros$modelo)
model_table <- prop.table(model_table) * 100
round(model_table, digits = 1)
#Em percentual
# Checando a variável
#Valor lógico cada variável cor se estiver dentro do vetor retorna verdaeiro, caso não, falso.
table(carros$conserv)
#variável modelo e conservadora (segunda variável está em True e False)
CrossTable(x = carros$modelo, y = carros$conserv)
## Teste do Qui-quadrado
# É um teste não paramétrico, ou seja, não depende dos
# parâmetros populacionais, como média e variância.
#VARIÁVEL QUALITATIVA, COMPARAR PROPORÇÕES.
# O princípio básico deste método é comparar proporções,
CrossTable(x = carros$modelo, y = carros$conserv, chisq = TRUE)
chisq.test(x = carros$modelo, y = carros$conserv)
